#!/bin/bash
# Mock systemd-sysext for testing

# Parse arguments
ACTION=""
MUTABLE=""
JSON=""

while [[ $# -gt 0 ]]; do
    case $1 in
        merge|unmerge|status)
            ACTION="$1"
            shift
            ;;
        --mutable=*)
            MUTABLE="${1#*=}"
            shift
            ;;
        --json=*)
            JSON="${1#*=}"
            shift
            ;;
        *)
            echo "Unknown option: $1" >&2
            exit 1
            ;;
    esac
done

# Simulate different behaviors based on action
case "$ACTION" in
    merge)
        if [ "$JSON" = "short" ]; then
            echo '{"action":"merge","type":"sysext","status":"success","extensions":["test-ext-1","test-ext-2"]}'
        else
            echo "Merged system extensions: test-ext-1, test-ext-2"
        fi
        ;;
    unmerge)
        if [ "$JSON" = "short" ]; then
            echo '{"action":"unmerge","type":"sysext","status":"success","extensions":["test-ext-1","test-ext-2"]}'
        else
            echo "Unmerged system extensions: test-ext-1, test-ext-2"
        fi
        ;;
    status)
        if [ "$JSON" = "short" ]; then
            # JSON format similar to real systemd-sysext
            echo '[{"hierarchy":"/opt","extensions":"none","since":null},{"hierarchy":"/usr","extensions":["test-ext-1","test-ext-2"],"since":1705243805000000}]'
        else
            # Mock status output similar to real systemd-sysext
            echo "HIERARCHY EXTENSIONS  SINCE                      "
            echo "/opt      test-ext-1  Tue 2025-01-14 15:30:00 UTC"
            echo "          test-ext-2    "
            echo "/usr      test-ext-1  Tue 2025-01-14 15:30:05 UTC"
            echo "          test-ext-2    "
        fi
        ;;
    *)
        echo "Invalid action: $ACTION" >&2
        exit 1
        ;;
esac

exit 0
